--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Выведите для каждого покупателя его адрес проживания, 
--город и страну проживания.

select  concat (c.last_name , ' ' , c.first_name) as customer_name , a.address , c2.city,c3.country  
from customer c 
join address a on c.address_id = a.address_id
join city c2 on a.city_id = c2.city_id
join country c3 on c2.country_id = c3.country_id




--ЗАДАНИЕ №2
--С помощью SQL-запроса посчитайте для каждого магазина количество его покупателей.

select s.store_id , count(c.customer_id)
from  store s 
join customer c on s.store_id = c.store_id 
group by s.store_id




--Доработайте запрос и выведите только те магазины, 
--у которых количество покупателей больше 300-от.
--Для решения используйте фильтрацию по сгруппированным строкам 
--с использованием функции агрегации.

select s.store_id , count(c.customer_id)
from  store s 
join customer c on s.store_id = c.store_id 
group by s.store_id 
having count(c.customer_id) > 300



-- Доработайте запрос, добавив в него информацию о городе магазина, 
--а также фамилию и имя продавца, который работает в этом магазине.

select s.store_id , c2.city, concat(s2.last_name , ' ', s2.first_name), count(c.customer_id) -- с inner join получил тот же результат
from  store s 
left join customer c on s.store_id = c.store_id
left join address a on s.address_id = a.address_id
left join city c2 on a.city_id = c2.city_id
left join staff s2 on s.manager_staff_id = s2.staff_id 
group by s.store_id , c2.city_id , s2.staff_id 
having count(c.customer_id) > 300



--ЗАДАНИЕ №3
--Выведите ТОП-5 покупателей, 
--которые взяли в аренду за всё время наибольшее количество фильмов

select   count(f.title) количество_фильмов, c.last_name || ' ' || c.first_name  as Покупатели
from rental r 
join inventory i on r.inventory_id = i.inventory_id 
join film f on i.film_id = f.film_id
join customer c on r.customer_id = c.customer_id 
group by c.customer_id  
order by count(f.title)  desc
limit  5




--ЗАДАНИЕ №4
--Посчитайте для каждого покупателя 4 аналитических показателя:
--  1. количество фильмов, которые он взял в аренду
--  2. общую стоимость платежей за аренду всех фильмов (значение округлите до целого числа)
--  3. минимальное значение платежа за аренду фильма
--  4. максимальное значение платежа за аренду фильма

select   c.last_name || ' ' || c.first_name  as Покупатели, count(f.title) количество_фильмов,
round (sum (p.amount), 0) все_платежи, min(p.amount) минимальный_платеж, max(p.amount) максимальный_платеж 
from rental r 
join inventory i on r.inventory_id = i.inventory_id 
join film f on i.film_id = f.film_id
join customer c on r.customer_id = c.customer_id
join payment p on r.rental_id =p.rental_id 
group by c.customer_id  

--ЗАДАНИЕ №5
--Используя данные из таблицы городов, составьте все возможные пары городов так, чтобы 
--в результате не было пар с одинаковыми названиями городов. Решение должно быть через Декартово произведение.


select distinct  c.city, c2.city  
from city c
cross join city c2 
where c.city != c2.city



--ЗАДАНИЕ №6
--Используя данные из таблицы rental о дате выдачи фильма в аренду (поле rental_date) и 
--дате возврата (поле return_date), вычислите для каждого покупателя среднее количество 
--дней, за которые он возвращает фильмы. В результате должны быть дробные значения, а не интервал.
 

select c.customer_id ,round (avg (r.return_date::date - r.rental_date::date), 2) средняя_аренда
from rental r
join customer c on r.customer_id =c.customer_id
group by c.customer_id
order by c.customer_id

--======== ДОПОЛНИТЕЛЬНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Посчитайте для каждого фильма сколько раз его брали в аренду и значение общей стоимости аренды фильма за всё время.

select f.title, f.rating , c."name" жанр , f.release_year, l."name" язык, count (r.rental_id) количество_аренд, sum (p.amount) сумма_выручки
from film f 
join film_category fc on f.film_id = fc.film_id
join category c on fc.category_id = c.category_id 
join "language" l on f.language_id = l.language_id
join inventory i on f.film_id =i.film_id 
join rental r on i.inventory_id = r.inventory_id
join payment p on r.rental_id =p.rental_id
group by f.film_id, f.rating , c."name" , f.release_year, l."name"

  



--ЗАДАНИЕ №2
--Доработайте запрос из предыдущего задания и выведите с помощью него фильмы, которые отсутствуют на dvd дисках.

select f.title, f.rating , c."name" жанр , f.release_year, l."name" язык, count (r.rental_id) количество_аренд, sum (p.amount) сумма_выручки
from film f 
join film_category fc on f.film_id = fc.film_id
join category c on fc.category_id = c.category_id 
join "language" l on f.language_id = l.language_id
left join inventory i on f.film_id =i.film_id
left join rental r on i.inventory_id = r.inventory_id
left join payment p on r.rental_id =p.rental_id
where p.rental_id is null
group by f.film_id, f.rating , c."name" , f.release_year, l."name"

 


--ЗАДАНИЕ №3
--Посчитайте количество продаж, выполненных каждым продавцом. Добавьте вычисляемую колонку "Премия".
--Если количество продаж превышает 7300, то значение в колонке будет "Да", иначе должно быть значение "Нет".


select s.staff_id , count(p.amount) количество_продаж,
CASE
   when count(p.amount) > 7300 THEN 'Да'
   WHEN count(p.amount) <= 7300 THEN 'Нет'
   end премия 
from staff s
join payment p on s.staff_id = p.staff_id 
group by s.staff_id
